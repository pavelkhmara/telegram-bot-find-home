from scrapers.olx import fetch_olx_offers
from telegram import Update
from telegram.ext import ContextTypes
import logging

logger = logging.getLogger(__name__)

async def search_and_send(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    from db.db import load_filter
    filter_data = await load_filter(user_id)

    if not filter_data:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä.")
        return

    await update.message.reply_text("–ò—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ OLX...")
    offers = await fetch_olx_offers(filter_data)
    
    logger.info("–ü–æ–ª—É—á–µ–Ω–æ %s –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å OLX –¥–ª—è user_id=%s", len(offers), user_id)

    if not offers:
        await update.message.reply_text("–ù–µ –Ω–∞—à–ª–æ—Å—å –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")
        return

    for offer in offers:
        text = f"üìå <b>{offer['title']}</b>\nüí∞ {offer['price']}\nüîó <a href='{offer['url']}'>–°–º–æ—Ç—Ä–µ—Ç—å</a>"
        await update.message.reply_html(text)
        